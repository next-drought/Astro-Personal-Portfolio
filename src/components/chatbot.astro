<!-- chatbot.astro -->
<div class="container">
    <div class="chatbox">
        <div class="chatbox__support">
            <div class="chatbox__header">
                <div class="chatbox__image--header">
                    <img
                        src="https://img.icons8.com/color/48/000000/circled-user-female-skin-type-5--v1.png"
                        alt="image"
                    />
                </div>
                <div class="chatbox__content--header">
                    <h4 class="chatbox__heading--header">
                        Chat with DynamicPacific
                    </h4>
                    <p class="chatbox__description--header">
                        Hi. This is DynamicPacific. How can I help you?
                    </p>
                </div>
            </div>
            <div class="chatbox__messages">
                <!-- Messages will be displayed here -->
            </div>
            <div class="chatbox__footer">
                <input type="text" placeholder="Write a message..." />
                <button class="chatbox__send--footer send__button">Send</button>
            </div>
        </div>
        <div class="chatbox__button">
            <button><img src="../public/images/chatbox-icon.svg" /></button>
        </div>
    </div>
</div>

<script>
    class Chatbox {
        constructor() {
            this.args = {
                openButton: document.querySelector(".chatbox__button"),
                chatBox: document.querySelector(".chatbox__support"),
                sendButton: document.querySelector(".send__button"),
            };

            this.state = false;
            this.messages = [];
        }

        display() {
            const { openButton, chatBox, sendButton } = this.args;

            openButton.addEventListener("click", () =>
                this.toggleState(chatBox),
            );

            sendButton.addEventListener("click", () =>
                this.onSendButton(chatBox),
            );

            const node = chatBox.querySelector("input");
            node.addEventListener("keyup", ({ key }) => {
                if (key === "Enter") {
                    this.onSendButton(chatBox);
                }
            });
        }

        toggleState(chatbox) {
            this.state = !this.state;

            // show or hides the box
            if (this.state) {
                chatbox.classList.add("chatbox--active");
            } else {
                chatbox.classList.remove("chatbox--active");
            }
        }

        onSendButton(chatbox) {
            var textField = chatbox.querySelector("input");
            let text1 = textField.value;
            if (text1 === "") {
                return;
            }

            let msg1 = { name: "User", message: text1 };
            this.messages.push(msg1);

            fetch("http://127.0.0.1:5000/predict", {
                method: "POST",
                body: JSON.stringify({ message: text1 }),
                mode: "cors",
                headers: {
                    "Content-Type": "application/json",
                },
            })
                .then((r) => r.json())
                .then((r) => {
                    let msg2 = { name: "Sam", message: r.answer };
                    this.messages.push(msg2);
                    this.updateChatText(chatbox);
                    textField.value = "";
                })
                .catch((error) => {
                    console.error("Error:", error);
                    this.updateChatText(chatbox);
                    textField.value = "";
                });
        }

        updateChatText(chatbox) {
            var html = "";
            this.messages
                .slice()
                .reverse()
                .forEach(function (item, index) {
                    if (item.name === "Sam") {
                        html +=
                            '<div class="messages__item messages__item--visitor">' +
                            item.message +
                            "</div>";
                    } else {
                        html +=
                            '<div class="messages__item messages__item--operator">' +
                            item.message +
                            "</div>";
                    }
                });

            const chatmessage = chatbox.querySelector(".chatbox__messages");
            chatmessage.innerHTML = html;
        }
    }

    const chatbox = new Chatbox();
    chatbox.display();
</script>

<style>
    /* Add your CSS styles for the chatbot here */
    .container {
        /* Container styles */
    }
    .chatbox {
        position: absolute;
        bottom: 30px;
        right: 30px;
    }
    /* CONTENT IS CLOSE */
    .chatbox__support {
        display: flex;
        flex-direction: column;
        background: #eee;
        width: 300px;
        height: 350px;
        z-index: -123456;
        opacity: 0;
        transition: all 0.5s ease-in-out;
    }

    /* CONTENT ISOPEN */
    .chatbox--active {
        transform: translateY(-40px);
        z-index: 123456;
        opacity: 1;
    }

    /* BUTTON */
    .chatbox__button {
        text-align: right;
    }

    .send__button {
        padding: 6px;
        background: transparent;
        border: none;
        outline: none;
        cursor: pointer;
    }

    /* HEADER */
    .chatbox__header {
        position: sticky;
        top: 0;
        background: orange;
    }

    /* MESSAGES */
    .chatbox__messages {
        margin-top: auto;
        display: flex;
        overflow-y: scroll;
        flex-direction: column-reverse;
    }

    .messages__item {
        background: orange;
        max-width: 60.6%;
        width: fit-content;
    }
</style>
